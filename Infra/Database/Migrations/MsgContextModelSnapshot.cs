// <auto-generated />
using System;
using Infra.Database.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Infra.Migrations
{
    [DbContext(typeof(MsgContext))]
    partial class MsgContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("mensageiro")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Domain.BlockInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date");

                    b.HasKey("Id")
                        .HasName("pk_blocks");

                    b.ToTable("blocks");
                });

            modelBuilder.Entity("Domain.ChatGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_chatgroups");

                    b.ToTable("chatgroups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbbb7699-0314-4e71-a903-00e52a48f6c0")
                        },
                        new
                        {
                            Id = new Guid("bb54b14b-746c-4c33-b126-53daa1c9dcc2")
                        },
                        new
                        {
                            Id = new Guid("860adda4-870d-4739-aa0d-e2964db4d407")
                        },
                        new
                        {
                            Id = new Guid("dd2b3ec1-0b44-4f69-a633-8961b9f8fdfc")
                        },
                        new
                        {
                            Id = new Guid("c210e1a1-3dc4-416a-852c-14df13d0e2b0")
                        },
                        new
                        {
                            Id = new Guid("04b053f0-7edc-4ee1-ab40-81a2ab4322e1")
                        },
                        new
                        {
                            Id = new Guid("64113c17-936b-41ac-ba47-b2f99dd6129e")
                        },
                        new
                        {
                            Id = new Guid("cb1b4669-bd41-4457-97fd-e6bcaf567f6e")
                        },
                        new
                        {
                            Id = new Guid("53f34079-fcfa-4bca-a9b8-e32739e7e1a0")
                        },
                        new
                        {
                            Id = new Guid("2f561e83-a3e0-4836-9980-e82ff6eed050")
                        },
                        new
                        {
                            Id = new Guid("0f8dfb7b-a625-47d0-a18f-346207c3dc65")
                        },
                        new
                        {
                            Id = new Guid("859fe3f9-37c6-445d-9de1-0fda6857ffd7")
                        },
                        new
                        {
                            Id = new Guid("142ace51-f749-4856-b758-f0d21064cf6c")
                        },
                        new
                        {
                            Id = new Guid("7ed7cb89-5460-47ea-bce8-8ba1e8403c0e")
                        },
                        new
                        {
                            Id = new Guid("c46d1c1c-14f8-4816-86e8-49edbd1c7aac")
                        });
                });

            modelBuilder.Entity("Domain.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("BlockId")
                        .HasColumnType("uuid")
                        .HasColumnName("blockid");

                    b.Property<Guid>("ContactUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("contactuserid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("pk_contacts");

                    b.HasIndex("BlockId")
                        .IsUnique()
                        .HasDatabaseName("ix_contacts_blockid");

                    b.HasIndex("ContactUserId")
                        .HasDatabaseName("ix_contacts_contactuserid");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_contacts_userid");

                    b.ToTable("contacts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e05dae1-c4a8-451b-99b0-c62fde342a07"),
                            ContactUserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d"),
                            UserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2")
                        },
                        new
                        {
                            Id = new Guid("b552668f-d08d-4b82-8449-e9fd7b6402f6"),
                            ContactUserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596"),
                            UserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2")
                        },
                        new
                        {
                            Id = new Guid("0b98c6c7-9240-4720-9c17-ffeeeb1d8cbd"),
                            ContactUserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5"),
                            UserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2")
                        },
                        new
                        {
                            Id = new Guid("8b2e8c8b-d904-456e-beea-a3a3c9a5f393"),
                            ContactUserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162"),
                            UserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2")
                        },
                        new
                        {
                            Id = new Guid("063a4fdc-5d12-43ca-a3ac-2682017ef9ef"),
                            ContactUserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51"),
                            UserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2")
                        },
                        new
                        {
                            Id = new Guid("9db1fa19-2a5e-4a4b-9f16-c5a28aec103e"),
                            ContactUserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2"),
                            UserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d")
                        },
                        new
                        {
                            Id = new Guid("97abffd7-d6ea-4319-8f09-f0637667dccb"),
                            ContactUserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596"),
                            UserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d")
                        },
                        new
                        {
                            Id = new Guid("713553d9-1122-42da-ba77-c0cc70bdc046"),
                            ContactUserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5"),
                            UserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d")
                        },
                        new
                        {
                            Id = new Guid("7b7d3c1e-61bd-427c-b1d6-4bbcfe769337"),
                            ContactUserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162"),
                            UserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d")
                        },
                        new
                        {
                            Id = new Guid("05677bbe-3dea-422e-be4f-785d1446131e"),
                            ContactUserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51"),
                            UserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d")
                        },
                        new
                        {
                            Id = new Guid("1af2a747-7d7d-47ad-9169-4e9d2e1e99f8"),
                            ContactUserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2"),
                            UserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596")
                        },
                        new
                        {
                            Id = new Guid("80bbbf6d-2258-4142-ad9d-fa59b5f7d70c"),
                            ContactUserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d"),
                            UserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596")
                        },
                        new
                        {
                            Id = new Guid("13a4b026-386f-4466-b42a-b55b423b7bae"),
                            ContactUserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5"),
                            UserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596")
                        },
                        new
                        {
                            Id = new Guid("e7f7770e-5ba8-441f-b1a7-c407559d37c4"),
                            ContactUserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162"),
                            UserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596")
                        },
                        new
                        {
                            Id = new Guid("70fd25e5-116b-4c16-866b-36454de4c0a8"),
                            ContactUserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51"),
                            UserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596")
                        },
                        new
                        {
                            Id = new Guid("3bf5e22f-68a5-4ea8-be44-e05d41965dfd"),
                            ContactUserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2"),
                            UserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5")
                        },
                        new
                        {
                            Id = new Guid("6cb2b131-4165-4234-9d21-5a80d725fc44"),
                            ContactUserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d"),
                            UserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5")
                        },
                        new
                        {
                            Id = new Guid("1be8839a-94f1-4a82-affd-c1024c4c41e1"),
                            ContactUserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596"),
                            UserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5")
                        },
                        new
                        {
                            Id = new Guid("088a19cb-146a-49e7-bf0a-74170873a92f"),
                            ContactUserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162"),
                            UserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5")
                        },
                        new
                        {
                            Id = new Guid("9ff79cb5-3e87-499a-abde-ca31d92038a0"),
                            ContactUserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51"),
                            UserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5")
                        },
                        new
                        {
                            Id = new Guid("afdc515a-8f3a-4a49-b174-82d426dabd1b"),
                            ContactUserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2"),
                            UserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162")
                        },
                        new
                        {
                            Id = new Guid("c60c7299-bfb9-423a-8b6a-865ea1ca3b1a"),
                            ContactUserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d"),
                            UserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162")
                        },
                        new
                        {
                            Id = new Guid("6dd7ae39-a322-4870-ad18-ea3657f96498"),
                            ContactUserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596"),
                            UserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162")
                        },
                        new
                        {
                            Id = new Guid("e26badd2-66c8-49a1-84ec-9d600d1f6ce2"),
                            ContactUserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5"),
                            UserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162")
                        },
                        new
                        {
                            Id = new Guid("bbf97855-f443-4419-8558-a6d0aeb57234"),
                            ContactUserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51"),
                            UserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162")
                        },
                        new
                        {
                            Id = new Guid("0055a6bb-c4e6-4c91-bdb4-bf62bd7ca07c"),
                            ContactUserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2"),
                            UserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51")
                        },
                        new
                        {
                            Id = new Guid("dbaa56c1-33fc-4f56-9ee7-29813168a060"),
                            ContactUserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d"),
                            UserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51")
                        },
                        new
                        {
                            Id = new Guid("02b73b52-d9d9-484b-b581-276caaa1df5f"),
                            ContactUserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596"),
                            UserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51")
                        },
                        new
                        {
                            Id = new Guid("bc4e0fa5-ca82-470b-8911-aacd54a1319d"),
                            ContactUserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5"),
                            UserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51")
                        },
                        new
                        {
                            Id = new Guid("6500b195-f35d-4266-b0e9-d09bf7a04800"),
                            ContactUserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162"),
                            UserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51")
                        });
                });

            modelBuilder.Entity("Domain.ContactInvitation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("InvitedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("inviteduserid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("pk_contactinvitations");

                    b.HasIndex("InvitedUserId")
                        .HasDatabaseName("ix_contactinvitations_inviteduserid");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_contactinvitations_userid");

                    b.ToTable("contactinvitations");
                });

            modelBuilder.Entity("Domain.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid")
                        .HasColumnName("groupid");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("sentat");

                    b.Property<string>("Text")
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("pk_messages");

                    b.HasIndex("GroupId")
                        .HasDatabaseName("ix_messages_groupid");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_messages_userid");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nickname");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2"),
                            Email = "joao.teste@teste.com",
                            Nickname = "João"
                        },
                        new
                        {
                            Id = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d"),
                            Email = "leo.teste@teste.com",
                            Nickname = "Leo"
                        },
                        new
                        {
                            Id = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596"),
                            Email = "mariana.teste@teste.com",
                            Nickname = "Mariana"
                        },
                        new
                        {
                            Id = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5"),
                            Email = "matheus.teste@teste.com",
                            Nickname = "Matheus"
                        },
                        new
                        {
                            Id = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162"),
                            Email = "claudia.teste@teste.com",
                            Nickname = "Claudia"
                        },
                        new
                        {
                            Id = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51"),
                            Email = "luisfelipe.teste@teste.com",
                            Nickname = "Luís Felipe"
                        });
                });

            modelBuilder.Entity("Domain.UserAccount", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hashedpassword");

                    b.HasKey("UserId")
                        .HasName("pk_useraccounts");

                    b.ToTable("useraccounts");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2"),
                            HashedPassword = "$2a$11$RvTc3V6tLGTwirz2XZ.9D.e.tX6a2O1MqiymlE2AGzbbpOl9anNvu"
                        },
                        new
                        {
                            UserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d"),
                            HashedPassword = "$2a$11$9.6g62CHl1Pok6/H0cPZ5OxcirWrVtQhIofUHVnvRh2ULi8yrT8NS"
                        },
                        new
                        {
                            UserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596"),
                            HashedPassword = "$2a$11$X1TE8FnbVerII5JDD2AxcOLltPXVzrXmpm8vUA6TKA0iM6bDtPV36"
                        },
                        new
                        {
                            UserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5"),
                            HashedPassword = "$2a$11$18kCD.jB6926HA8sAf5hneFE9gjYruQgqz6MIcchuERzSSyOoiJ/O"
                        },
                        new
                        {
                            UserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162"),
                            HashedPassword = "$2a$11$YJlG0Pqw.2/zGnd0TOaeb.X3zMW03v8jfYDcVfrSNCiiC2p5UN9mS"
                        },
                        new
                        {
                            UserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51"),
                            HashedPassword = "$2a$11$pHuHQo1iPA54pYxPSnZm3OR9.rbshJFb4/p7/m1KpH3pZ8j7la2Zq"
                        });
                });

            modelBuilder.Entity("Domain.UserGroupRelationship", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid")
                        .HasColumnName("groupid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.HasKey("GroupId", "UserId")
                        .HasName("pk_usergrouprelationships");

                    b.HasIndex("GroupId")
                        .HasDatabaseName("ix_usergrouprelationships_groupid");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_usergrouprelationships_userid");

                    b.ToTable("usergrouprelationships");

                    b.HasData(
                        new
                        {
                            GroupId = new Guid("bbbb7699-0314-4e71-a903-00e52a48f6c0"),
                            UserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2")
                        },
                        new
                        {
                            GroupId = new Guid("bbbb7699-0314-4e71-a903-00e52a48f6c0"),
                            UserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d")
                        },
                        new
                        {
                            GroupId = new Guid("bb54b14b-746c-4c33-b126-53daa1c9dcc2"),
                            UserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2")
                        },
                        new
                        {
                            GroupId = new Guid("bb54b14b-746c-4c33-b126-53daa1c9dcc2"),
                            UserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596")
                        },
                        new
                        {
                            GroupId = new Guid("860adda4-870d-4739-aa0d-e2964db4d407"),
                            UserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2")
                        },
                        new
                        {
                            GroupId = new Guid("860adda4-870d-4739-aa0d-e2964db4d407"),
                            UserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5")
                        },
                        new
                        {
                            GroupId = new Guid("dd2b3ec1-0b44-4f69-a633-8961b9f8fdfc"),
                            UserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2")
                        },
                        new
                        {
                            GroupId = new Guid("dd2b3ec1-0b44-4f69-a633-8961b9f8fdfc"),
                            UserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162")
                        },
                        new
                        {
                            GroupId = new Guid("c210e1a1-3dc4-416a-852c-14df13d0e2b0"),
                            UserId = new Guid("d9f0c3e1-02f6-4ce5-bf74-b7c0f14cf2d2")
                        },
                        new
                        {
                            GroupId = new Guid("c210e1a1-3dc4-416a-852c-14df13d0e2b0"),
                            UserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51")
                        },
                        new
                        {
                            GroupId = new Guid("04b053f0-7edc-4ee1-ab40-81a2ab4322e1"),
                            UserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d")
                        },
                        new
                        {
                            GroupId = new Guid("04b053f0-7edc-4ee1-ab40-81a2ab4322e1"),
                            UserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596")
                        },
                        new
                        {
                            GroupId = new Guid("64113c17-936b-41ac-ba47-b2f99dd6129e"),
                            UserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d")
                        },
                        new
                        {
                            GroupId = new Guid("64113c17-936b-41ac-ba47-b2f99dd6129e"),
                            UserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5")
                        },
                        new
                        {
                            GroupId = new Guid("cb1b4669-bd41-4457-97fd-e6bcaf567f6e"),
                            UserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d")
                        },
                        new
                        {
                            GroupId = new Guid("cb1b4669-bd41-4457-97fd-e6bcaf567f6e"),
                            UserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162")
                        },
                        new
                        {
                            GroupId = new Guid("53f34079-fcfa-4bca-a9b8-e32739e7e1a0"),
                            UserId = new Guid("8a4b6a86-a053-46ac-9ba6-04eacaf5bf7d")
                        },
                        new
                        {
                            GroupId = new Guid("53f34079-fcfa-4bca-a9b8-e32739e7e1a0"),
                            UserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51")
                        },
                        new
                        {
                            GroupId = new Guid("2f561e83-a3e0-4836-9980-e82ff6eed050"),
                            UserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596")
                        },
                        new
                        {
                            GroupId = new Guid("2f561e83-a3e0-4836-9980-e82ff6eed050"),
                            UserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5")
                        },
                        new
                        {
                            GroupId = new Guid("0f8dfb7b-a625-47d0-a18f-346207c3dc65"),
                            UserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596")
                        },
                        new
                        {
                            GroupId = new Guid("0f8dfb7b-a625-47d0-a18f-346207c3dc65"),
                            UserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162")
                        },
                        new
                        {
                            GroupId = new Guid("859fe3f9-37c6-445d-9de1-0fda6857ffd7"),
                            UserId = new Guid("3fc9e8d0-9a65-459f-ade4-57fe754f7596")
                        },
                        new
                        {
                            GroupId = new Guid("859fe3f9-37c6-445d-9de1-0fda6857ffd7"),
                            UserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51")
                        },
                        new
                        {
                            GroupId = new Guid("142ace51-f749-4856-b758-f0d21064cf6c"),
                            UserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5")
                        },
                        new
                        {
                            GroupId = new Guid("142ace51-f749-4856-b758-f0d21064cf6c"),
                            UserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162")
                        },
                        new
                        {
                            GroupId = new Guid("7ed7cb89-5460-47ea-bce8-8ba1e8403c0e"),
                            UserId = new Guid("1e35ccb4-7d5a-4747-9cb0-62a875f44fd5")
                        },
                        new
                        {
                            GroupId = new Guid("7ed7cb89-5460-47ea-bce8-8ba1e8403c0e"),
                            UserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51")
                        },
                        new
                        {
                            GroupId = new Guid("c46d1c1c-14f8-4816-86e8-49edbd1c7aac"),
                            UserId = new Guid("4faaf336-27d2-4680-a2ae-78ec6c0b4162")
                        },
                        new
                        {
                            GroupId = new Guid("c46d1c1c-14f8-4816-86e8-49edbd1c7aac"),
                            UserId = new Guid("7b2601b8-0af4-43d3-9dda-f1db0cd7dd51")
                        });
                });

            modelBuilder.Entity("Domain.Contact", b =>
                {
                    b.HasOne("Domain.BlockInfo", "Block")
                        .WithOne()
                        .HasForeignKey("Domain.Contact", "BlockId")
                        .HasConstraintName("blockid");

                    b.HasOne("Domain.User", "ContactUser")
                        .WithMany()
                        .HasForeignKey("ContactUserId")
                        .HasConstraintName("contactuserid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Block");

                    b.Navigation("ContactUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.ContactInvitation", b =>
                {
                    b.HasOne("Domain.User", "InvitedUser")
                        .WithMany()
                        .HasForeignKey("InvitedUserId")
                        .HasConstraintName("inviteduserid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvitedUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Message", b =>
                {
                    b.HasOne("Domain.ChatGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .HasConstraintName("groupid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserAccount", b =>
                {
                    b.HasOne("Domain.User", "User")
                        .WithOne()
                        .HasForeignKey("Domain.UserAccount", "UserId")
                        .HasConstraintName("fk_useraccounts_users_userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserGroupRelationship", b =>
                {
                    b.HasOne("Domain.ChatGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .HasConstraintName("groupid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
